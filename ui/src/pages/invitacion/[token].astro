---
import BaseLayout from '../../layouts/BaseLayout.astro';
import PersonalInvitation from '../../components/PersonalInvitation.astro';

export async function getStaticPaths() {
  // En desarrollo, retornamos paths vacíos
  // En producción, esto se generaría dinámicamente
  return [];
}

const { token } = Astro.params;

// Obtener datos de la invitación desde la API
let invitation = null;
let error = null;

try {
  const apiUrl = import.meta.env.API_URL || 'http://localhost:3001';
  const response = await fetch(`${apiUrl}/api/invitacion/${token}`);
  
  if (response.ok) {
    const data = await response.json();
    invitation = data.invitation;
  } else {
    error = 'Invitación no encontrada';
  }
} catch (e) {
  error = 'Error al cargar la invitación';
  console.error('Error fetching invitation:', e);
}
---

<BaseLayout title={invitation ? `Invitación para ${invitation.guest_name}` : "Invitación"}>
  <main class="min-h-screen flex items-center justify-center p-4">
    {error ? (
      <div class="text-center">
        <div class="bg-red-50 border border-red-200 rounded-lg p-8 max-w-md mx-auto">
          <div class="text-red-600 text-6xl mb-4">💔</div>
          <h1 class="text-2xl font-bold text-red-800 mb-2">Oops!</h1>
          <p class="text-red-600 mb-4">{error}</p>
          <a 
            href="/" 
            class="inline-block bg-red-600 text-white px-6 py-2 rounded-lg hover:bg-red-700 transition-colors"
          >
            Ir a la página principal
          </a>
        </div>
      </div>
    ) : invitation ? (
      <PersonalInvitation invitation={invitation} />
    ) : (
      <div class="text-center">
        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-rose-600 mx-auto mb-4"></div>
        <p class="text-gray-600">Cargando invitación...</p>
      </div>
    )}
  </main>
</BaseLayout>