---
import BaseLayout from "../../layouts/BaseLayout.astro";
---

<BaseLayout title="Dashboard Admin - Sheila & Habib">
  <main class="min-h-screen bg-warm-beige">
    <!-- Header -->
    <header class="bg-white shadow-sm border-b border-gray-200">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-6">
          <div>
            <h1 class="font-serif text-2xl text-gray-800">Panel de Administraci√≥n</h1>
            <p class="text-gray-600">Boda Sheila & Habib - 4 de Julio, 2026</p>
          </div>
          <div class="flex items-center space-x-4">
            <span id="admin-name" class="text-gray-700"></span>
            <button id="logout-btn" class="bg-gray-800 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-gray-700 transition-colors">
              Cerrar Sesi√≥n
            </button>
          </div>
        </div>
      </div>
    </header>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <!-- Loading State -->
      <div id="loading-state" class="text-center py-12">
        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-gold mx-auto mb-4"></div>
        <p class="text-gray-600">Cargando datos...</p>
      </div>

      <!-- Dashboard Content -->
      <div id="dashboard-content" class="hidden">
        <!-- Navigation Tabs -->
        <div class="mb-8">
          <nav class="flex space-x-8" aria-label="Tabs">
            <button id="tab-overview" class="tab-button active whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm">
              üìä Resumen General
            </button>
            <button id="tab-analytics" class="tab-button whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm">
              üìà Estad√≠sticas Avanzadas
            </button>
            <button id="tab-invitations" class="tab-button whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm">
              üìß Invitaciones Enviadas
            </button>
            <button id="tab-guests" class="tab-button whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm">
              üë• Lista de Invitados
            </button>
          </nav>
        </div>

        <!-- Tab Content: Overview -->
        <div id="content-overview" class="tab-content">
          <!-- Statistics Cards -->
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-100">
              <div class="flex items-center">
                <div class="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center">
                  <svg class="w-6 h-6 text-green-600" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
                  </svg>
                </div>
                <div class="ml-4">
                  <p class="text-sm font-medium text-gray-600">Confirmados</p>
                  <p id="confirmed-count" class="text-2xl font-bold text-gray-900">-</p>
                </div>
              </div>
            </div>

            <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-100">
              <div class="flex items-center">
                <div class="w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center">
                  <svg class="w-6 h-6 text-red-600" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
                  </svg>
                </div>
                <div class="ml-4">
                  <p class="text-sm font-medium text-gray-600">No Asisten</p>
                  <p id="declined-count" class="text-2xl font-bold text-gray-900">-</p>
                </div>
              </div>
            </div>

            <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-100">
              <div class="flex items-center">
                <div class="w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center">
                  <svg class="w-6 h-6 text-yellow-600" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                  </svg>
                </div>
                <div class="ml-4">
                  <p class="text-sm font-medium text-gray-600">Pendientes</p>
                  <p id="pending-count" class="text-2xl font-bold text-gray-900">-</p>
                </div>
              </div>
            </div>

            <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-100">
              <div class="flex items-center">
                <div class="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                  <svg class="w-6 h-6 text-blue-600" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M16 4c0-1.11.89-2 2-2s2 .89 2 2-.89 2-2 2-2-.89-2-2zM4 18v-4h3v4h2v-7.5c0-.83.67-1.5 1.5-1.5S12 9.67 12 10.5V11h2.5c.83 0 1.5.67 1.5 1.5V18h2v4H4v-4z"/>
                  </svg>
                </div>
                <div class="ml-4">
                  <p class="text-sm font-medium text-gray-600">Total Personas</p>
                  <p id="total-people-overview" class="text-2xl font-bold text-gray-900">-</p>
                </div>
              </div>
            </div>
          </div>

          <!-- Action Buttons -->
          <div class="flex flex-wrap gap-4 mb-8">
            <button id="create-invitation-btn" class="bg-gold text-white px-6 py-3 rounded-lg font-medium hover:bg-yellow-600 transition-colors">
              Crear Invitaci√≥n
            </button>
            <button id="export-json-btn" class="bg-gray-800 text-white px-6 py-3 rounded-lg font-medium hover:bg-gray-700 transition-colors">
              Exportar JSON
            </button>
            <button id="export-csv-btn" class="bg-gray-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-gray-500 transition-colors">
              Exportar CSV
            </button>
            <button id="refresh-btn" class="bg-blue-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-blue-500 transition-colors">
              Actualizar Datos
            </button>
          </div>

          <!-- Recent Responses Table -->
          <div class="bg-white rounded-lg shadow-sm border border-gray-100 overflow-hidden">
            <div class="px-6 py-4 border-b border-gray-200">
              <h3 class="font-serif text-lg text-gray-800">Respuestas Recientes</h3>
            </div>
            
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                  <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nombre</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acompa√±ante</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha</th>
                  </tr>
                </thead>
                <tbody id="guests-table-body" class="bg-white divide-y divide-gray-200">
                  <!-- Contenido din√°mico -->
                </tbody>
              </table>
            </div>
          </div>
        </div>      
  <!-- Tab Content: Advanced Analytics -->
        <div id="content-analytics" class="tab-content hidden">
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
            <!-- Demographics -->
            <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-100">
              <h3 class="font-serif text-lg text-gray-800 mb-4">üë• Demograf√≠a</h3>
              <div class="space-y-4">
                <div>
                  <h4 class="font-medium text-gray-700 mb-2">Por G√©nero</h4>
                  <div id="gender-stats" class="space-y-2"></div>
                </div>
                <div>
                  <h4 class="font-medium text-gray-700 mb-2">Por Grupo de Edad</h4>
                  <div id="age-stats" class="space-y-2"></div>
                </div>
              </div>
            </div>

            <!-- Catering -->
            <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-100">
              <h3 class="font-serif text-lg text-gray-800 mb-4">üçΩÔ∏è Catering</h3>
              <div class="space-y-4">
                <div>
                  <h4 class="font-medium text-gray-700 mb-2">Opciones de Men√∫</h4>
                  <div id="menu-stats" class="space-y-2"></div>
                </div>
                <div>
                  <h4 class="font-medium text-gray-700 mb-2">Restricciones Diet√©ticas</h4>
                  <div id="dietary-stats" class="space-y-2"></div>
                </div>
                <div>
                  <h4 class="font-medium text-gray-700 mb-2">Alergias</h4>
                  <div id="allergy-stats" class="space-y-2"></div>
                </div>
              </div>
            </div>

            <!-- Logistics -->
            <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-100">
              <h3 class="font-serif text-lg text-gray-800 mb-4">üöå Log√≠stica</h3>
              <div class="space-y-4">
                <div class="flex justify-between items-center">
                  <span class="text-gray-700">Necesitan Transporte:</span>
                  <span id="transport-needed" class="font-bold text-blue-600">-</span>
                </div>
                <div>
                  <h4 class="font-medium text-gray-700 mb-2">Ubicaciones de Recogida</h4>
                  <div id="transport-locations" class="space-y-2"></div>
                </div>
                <div class="flex justify-between items-center">
                  <span class="text-gray-700">Necesitan Alojamiento:</span>
                  <span id="accommodation-needed" class="font-bold text-purple-600">-</span>
                </div>
              </div>
            </div>

            <!-- People Count -->
            <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-100">
              <h3 class="font-serif text-lg text-gray-800 mb-4">üìä Conteo Total</h3>
              <div class="space-y-4">
                <div class="flex justify-between items-center">
                  <span class="text-gray-700">Total Personas:</span>
                  <span id="total-people" class="font-bold text-gold text-2xl">-</span>
                </div>
                <div class="flex justify-between items-center">
                  <span class="text-gray-700">Invitados Principales:</span>
                  <span id="main-guests" class="font-bold text-gray-800">-</span>
                </div>
                <div class="flex justify-between items-center">
                  <span class="text-gray-700">Acompa√±antes:</span>
                  <span id="plus-ones" class="font-bold text-gray-800">-</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Tab Content: Invitations -->
        <div id="content-invitations" class="tab-content hidden">
          <div class="mb-6">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
              <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-100">
                <div class="flex items-center">
                  <div class="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                    <svg class="w-6 h-6 text-blue-600" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"/>
                    </svg>
                  </div>
                  <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">Total Enviadas</p>
                    <p id="invitations-total" class="text-2xl font-bold text-gray-900">-</p>
                  </div>
                </div>
              </div>

              <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-100">
                <div class="flex items-center">
                  <div class="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center">
                    <svg class="w-6 h-6 text-green-600" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
                    </svg>
                  </div>
                  <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">Con Respuesta</p>
                    <p id="invitations-responded" class="text-2xl font-bold text-gray-900">-</p>
                  </div>
                </div>
              </div>

              <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-100">
                <div class="flex items-center">
                  <div class="w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center">
                    <svg class="w-6 h-6 text-yellow-600" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                    </svg>
                  </div>
                  <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600">Pendientes</p>
                    <p id="invitations-pending" class="text-2xl font-bold text-gray-900">-</p>
                  </div>
                </div>
              </div>
            </div>

            <div class="bg-white rounded-lg shadow-sm border border-gray-100 overflow-hidden">
              <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="font-serif text-lg text-gray-800">Invitaciones Enviadas</h3>
              </div>
              
              <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                  <thead class="bg-gray-50">
                    <tr>
                      <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Invitado</th>
                      <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Mensaje</th>
                      <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
                      <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha Creaci√≥n</th>
                      <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
                    </tr>
                  </thead>
                  <tbody id="invitations-table-body" class="bg-white divide-y divide-gray-200">
                    <!-- Contenido din√°mico -->
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>

        <!-- Tab Content: Guests List -->
        <div id="content-guests" class="tab-content hidden">
          <div class="bg-white rounded-lg shadow-sm border border-gray-100 overflow-hidden">
            <div class="px-6 py-4 border-b border-gray-200">
              <h3 class="font-serif text-lg text-gray-800">Lista Completa de Invitados</h3>
            </div>
            
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                  <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nombre</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">G√©nero</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acompa√±ante</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Men√∫</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Transporte</th>
                  </tr>
                </thead>
                <tbody id="full-guests-table-body" class="bg-white divide-y divide-gray-200">
                  <!-- Contenido din√°mico -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>    <!-- 
Modal para crear invitaci√≥n -->
    <div id="invitation-modal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
      <div class="relative top-10 mx-auto p-5 border max-w-4xl shadow-lg rounded-md bg-white">
        <div class="mt-3">
          <h3 class="text-lg font-medium text-gray-900 mb-4">Crear Nueva Invitaci√≥n</h3>
          
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <!-- Formulario -->
            <div>
              <form id="invitation-form" class="space-y-4">
                <div>
                  <label for="guest_name" class="block text-sm font-medium text-gray-700 mb-2">Nombre del Invitado</label>
                  <input type="text" id="guest_name" name="guest_name" required
                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-gold focus:border-gold"
                    placeholder="Nombre completo" />
                </div>
                
                <div>
                  <label for="message" class="block text-sm font-medium text-gray-700 mb-2">Mensaje Personalizado (Opcional)</label>
                  <textarea id="message" name="message" rows="4"
                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-gold focus:border-gold"
                    placeholder="Mensaje especial para este invitado..."></textarea>
                </div>
                
                <div class="flex justify-end space-x-3 pt-4">
                  <button type="button" id="cancel-invitation"
                    class="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 transition-colors">
                    Cancelar
                  </button>
                  <button type="submit" id="create-invitation-submit"
                    class="px-4 py-2 bg-gold text-white rounded-md hover:bg-yellow-600 transition-colors">
                    Crear Invitaci√≥n
                  </button>
                </div>
              </form>
            </div>

            <!-- Preview -->
            <div>
              <h4 class="text-sm font-medium text-gray-700 mb-3">Vista Previa de la Invitaci√≥n</h4>
              <div class="border border-gray-200 rounded-lg p-4 bg-gradient-to-br from-warm-beige to-cream min-h-[300px]">
                <div class="text-center">
                  <div class="mb-4">
                    <div class="w-12 h-12 bg-gold rounded-full flex items-center justify-center mx-auto mb-3">
                      <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                      </svg>
                    </div>
                    <h2 class="font-serif text-xl text-gray-800 mb-2">¬°Est√°s Invitado!</h2>
                    <p class="text-gray-600 text-sm mb-4">Sheila & Habib</p>
                  </div>
                  
                  <div class="bg-white/50 rounded-lg p-4 mb-4">
                    <p class="text-gray-700 mb-2">
                      <span class="font-medium">Querido/a</span> 
                      <span id="preview-name" class="text-gold font-medium">Nombre del Invitado</span>
                    </p>
                    <div id="preview-message" class="text-gray-600 text-sm italic">
                      Nos complace invitarte a celebrar nuestro d√≠a especial.
                    </div>
                  </div>
                  
                  <div class="text-xs text-gray-500">
                    <p class="mb-1">üìÖ 4 de Julio, 2026</p>
                    <p>üìç Lugar de la celebraci√≥n</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Modal de √©xito -->
    <div id="success-modal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
      <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="text-center">
          <div class="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg class="w-8 h-8 text-green-600" fill="currentColor" viewBox="0 0 24 24">
              <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
            </svg>
          </div>
          <h3 class="text-lg font-medium text-gray-900 mb-2">¬°Invitaci√≥n Creada!</h3>
          <p class="text-gray-600 mb-4">La invitaci√≥n se ha generado correctamente</p>
          
          <div class="bg-gray-50 rounded-lg p-4 mb-4">
            <p class="text-sm text-gray-700 mb-2">Enlace de la invitaci√≥n:</p>
            <div class="flex items-center space-x-2">
              <input id="invitation-link" type="text" readonly 
                class="flex-1 px-3 py-2 bg-white border border-gray-300 rounded text-sm" value="" />
              <button id="copy-link-btn"
                class="px-3 py-2 bg-gold text-white rounded text-sm hover:bg-yellow-600 transition-colors"
                title="Copiar enlace">üìã</button>
            </div>
          </div>
          
          <div class="flex space-x-3">
            <button id="view-invitation-btn"
              class="flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
              Ver Invitaci√≥n
            </button>
            <button id="close-success-modal"
              class="flex-1 px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 transition-colors">
              Cerrar
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Notificaci√≥n Toast -->
    <div id="toast-notification" class="hidden fixed top-4 right-4 z-50">
      <div class="bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg flex items-center space-x-3">
        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
          <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
        </svg>
        <span id="toast-message">Enlace copiado al portapapeles</span>
      </div>
    </div>
  </main>
</BaseLayout>

<style>
  .tab-button {
    @apply border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300;
  }
  
  .tab-button.active {
    @apply border-gold text-gold;
  }
  
  .tab-content {
    @apply block;
  }
  
  .tab-content.hidden {
    display: none;
  }
</style><script>

  // Variables globales
  let currentAnalytics = null;
  let currentInvitations = null;

  // Verificar autenticaci√≥n al cargar
  document.addEventListener('DOMContentLoaded', () => {
    const authString = sessionStorage.getItem('adminAuth');
    const adminUser = sessionStorage.getItem('adminUser');
    
    if (!authString || !adminUser) {
      window.location.href = '/admin/login';
      return;
    }
    
    // Mostrar nombre del admin
    const user = JSON.parse(adminUser);
    const adminNameEl = document.getElementById('admin-name');
    if (adminNameEl) {
      adminNameEl.textContent = `Hola, ${user.name}`;
    }
    
    // Configurar navegaci√≥n por pesta√±as
    setupTabs();
    
    // Cargar datos del dashboard
    loadDashboardData();
  });

  // Configurar navegaci√≥n por pesta√±as
  function setupTabs() {
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');

    tabButtons.forEach(button => {
      button.addEventListener('click', () => {
        const tabId = button.id.replace('tab-', '');
        
        // Actualizar botones
        tabButtons.forEach(btn => btn.classList.remove('active'));
        button.classList.add('active');
        
        // Actualizar contenido
        tabContents.forEach(content => content.classList.add('hidden'));
        const targetContent = document.getElementById(`content-${tabId}`);
        if (targetContent) {
          targetContent.classList.remove('hidden');
        }
        
        // Cargar datos espec√≠ficos de la pesta√±a
        if (tabId === 'analytics') {
          loadAnalytics();
        } else if (tabId === 'invitations') {
          loadInvitations();
        } else if (tabId === 'guests') {
          loadFullGuestsList();
        }
      });
    });
  }

  // Funci√≥n para hacer peticiones autenticadas
  async function authenticatedFetch(url, options = {}) {
    const authString = sessionStorage.getItem('adminAuth');
    if (!authString) {
      throw new Error('No authenticated');
    }
    
    // Asegurar que la URL use el puerto correcto del API
    const apiUrl = url.startsWith('/api/') ? `http://localhost:3001${url}` : url;
    
    return fetch(apiUrl, {
      ...options,
      headers: {
        ...options.headers,
        'Authorization': `Basic ${authString}`,
        'Content-Type': 'application/json'
      }
    });
  }

  // Cargar datos del dashboard
  async function loadDashboardData() {
    try {
      const response = await authenticatedFetch('/api/admin/summary');
      const data = await response.json();
      
      if (data.success) {
        updateStatistics(data.summary.statistics);
        updateGuestsTable(data.summary.recent_responses);
        
        // Mostrar contenido
        document.getElementById('loading-state')?.classList.add('hidden');
        document.getElementById('dashboard-content')?.classList.remove('hidden');
      } else {
        throw new Error(data.message);
      }
    } catch (error) {
      console.error('Error loading dashboard:', error);
      alert('Error al cargar los datos. Verifica tu conexi√≥n.');
    }
  }

  // Cargar estad√≠sticas avanzadas
  async function loadAnalytics() {
    if (currentAnalytics) {
      updateAnalyticsDisplay(currentAnalytics);
      return;
    }

    try {
      const response = await authenticatedFetch('/api/admin/analytics');
      const data = await response.json();
      
      if (data.success) {
        currentAnalytics = data.analytics;
        updateAnalyticsDisplay(currentAnalytics);
      }
    } catch (error) {
      console.error('Error loading analytics:', error);
    }
  }

  // Cargar invitaciones
  async function loadInvitations() {
    try {
      const response = await authenticatedFetch('/api/admin/invitations');
      const data = await response.json();
      
      if (data.success) {
        currentInvitations = data;
        updateInvitationsDisplay(data);
      }
    } catch (error) {
      console.error('Error loading invitations:', error);
    }
  }

  // Cargar lista completa de invitados
  async function loadFullGuestsList() {
    try {
      const response = await authenticatedFetch('/api/admin/export?format=json');
      const data = await response.json();
      
      if (data.success) {
        updateFullGuestsTable(data.guests);
      }
    } catch (error) {
      console.error('Error loading full guests list:', error);
    }
  } 
 // Actualizar estad√≠sticas b√°sicas
  function updateStatistics(stats) {
    document.getElementById('confirmed-count').textContent = stats.attending || '0';
    document.getElementById('declined-count').textContent = stats.notAttending || '0';
    document.getElementById('pending-count').textContent = stats.pending || '0';
    document.getElementById('total-people-overview').textContent = stats.totalPeople || '0';
  }

  // Actualizar tabla de invitados recientes
  function updateGuestsTable(guests) {
    const tbody = document.getElementById('guests-table-body');
    if (!tbody) return;
    
    tbody.innerHTML = guests.map(guest => {
      const status = guest.attending === 1 ? 'Confirmado' : guest.attending === 0 ? 'No asiste' : 'Pendiente';
      const statusClass = guest.attending === 1 ? 'text-green-600' : guest.attending === 0 ? 'text-red-600' : 'text-yellow-600';
      const plusOne = guest.plus_one ? (guest.plus_one_name || 'S√≠') : 'No';
      const date = new Date(guest.created_at).toLocaleDateString('es-ES');
      
      return `
        <tr>
          <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${guest.name}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${guest.email || '-'}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm ${statusClass}">${status}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${plusOne}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${date}</td>
        </tr>
      `;
    }).join('');
  }

  // Actualizar display de estad√≠sticas avanzadas
  function updateAnalyticsDisplay(analytics) {
    const { guests } = analytics;
    
    // Actualizar contadores principales
    document.getElementById('total-people').textContent = guests.totalPeople || '0';
    document.getElementById('main-guests').textContent = guests.attending || '0';
    document.getElementById('plus-ones').textContent = guests.plusOnes || '0';
    
    // Estad√≠sticas de transporte y alojamiento
    document.getElementById('transport-needed').textContent = guests.logistics?.transportNeeded || '0';
    document.getElementById('accommodation-needed').textContent = guests.logistics?.accommodationNeeded || '0';
    
    // Estad√≠sticas de g√©nero
    updateStatsSection('gender-stats', guests.demographics?.gender || []);
    
    // Estad√≠sticas de edad
    updateStatsSection('age-stats', guests.demographics?.age || []);
    
    // Estad√≠sticas de men√∫
    updateStatsSection('menu-stats', guests.catering?.menu || []);
    
    // Estad√≠sticas diet√©ticas
    updateStatsSection('dietary-stats', guests.catering?.dietary || []);
    
    // Estad√≠sticas de alergias
    updateStatsSection('allergy-stats', guests.catering?.allergies || []);
    
    // Ubicaciones de transporte
    updateStatsSection('transport-locations', guests.logistics?.transportLocations || []);
  }

  // Funci√≥n auxiliar para actualizar secciones de estad√≠sticas
  function updateStatsSection(elementId, data) {
    const element = document.getElementById(elementId);
    if (!element) return;
    
    if (data.length === 0) {
      element.innerHTML = '<p class="text-gray-500 text-sm">Sin datos disponibles</p>';
      return;
    }
    
    element.innerHTML = data.map(item => {
      const label = item.gender || item.age_group || item.menu || item.restriction || item.allergy || item.location || 'Sin especificar';
      return `
        <div class="flex justify-between items-center">
          <span class="text-gray-700">${label}:</span>
          <span class="font-medium text-gray-900">${item.count}</span>
        </div>
      `;
    }).join('');
  }

  // Actualizar display de invitaciones
  function updateInvitationsDisplay(data) {
    // Actualizar estad√≠sticas de invitaciones
    document.getElementById('invitations-total').textContent = data.statistics.total || '0';
    document.getElementById('invitations-responded').textContent = data.statistics.responded || '0';
    document.getElementById('invitations-pending').textContent = data.statistics.pending || '0';
    
    // Actualizar tabla de invitaciones
    const tbody = document.getElementById('invitations-table-body');
    if (!tbody) return;
    
    tbody.innerHTML = data.invitations.map((invitation) => {
      const date = new Date(invitation.created_at).toLocaleDateString('es-ES');
      const message = invitation.message ? invitation.message.substring(0, 50) + '...' : 'Sin mensaje';
      const status = 'Enviada'; // Por ahora, todas est√°n enviadas
      
      return `
        <tr>
          <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${invitation.guest_name}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${message}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-blue-600">${status}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${date}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
            <button onclick="viewInvitation('${invitation.token}')" class="text-blue-600 hover:text-blue-900 mr-2">Ver</button>
            <button onclick="copyInvitationLink('${invitation.token}')" class="text-green-600 hover:text-green-900">Copiar</button>
          </td>
        </tr>
      `;
    }).join('');
  }

  // Actualizar tabla completa de invitados
  function updateFullGuestsTable(guests) {
    const tbody = document.getElementById('full-guests-table-body');
    if (!tbody) return;
    
    tbody.innerHTML = guests.map(guest => {
      const status = guest.attending === 1 ? 'Confirmado' : guest.attending === 0 ? 'No asiste' : 'Pendiente';
      const statusClass = guest.attending === 1 ? 'text-green-600' : guest.attending === 0 ? 'text-red-600' : 'text-yellow-600';
      const gender = guest.gender || 'No especificado';
      const plusOne = guest.plus_one ? (guest.plus_one_name || 'S√≠') : 'No';
      const menu = guest.menu_choice || 'No especificado';
      const transport = guest.needs_transport ? 'S√≠' : 'No';
      
      return `
        <tr>
          <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${guest.name}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${guest.email || '-'}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm ${statusClass}">${status}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${gender}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${plusOne}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${menu}</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${transport}</td>
        </tr>
      `;
    }).join('');
  }
  
  // Funciones para gesti√≥n de invitaciones
  function viewInvitation(token) {
    window.open(`/invitacion/${token}`, '_blank');
  }

  function copyInvitationLink(token) {
    const link = `${window.location.origin}/invitacion/${token}`;
    navigator.clipboard.writeText(link).then(() => {
      showToast('Enlace copiado al portapapeles');
    });
  }

  // Funci√≥n para mostrar toast notification
  function showToast(message, type = 'success') {
    const toast = document.getElementById('toast-notification');
    const toastMessage = document.getElementById('toast-message');
    
    if (toast && toastMessage) {
      toastMessage.textContent = message;
      
      // Cambiar color seg√∫n el tipo
      const toastDiv = toast.querySelector('div');
      if (toastDiv) {
        toastDiv.className = type === 'success' 
          ? 'bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg flex items-center space-x-3'
          : 'bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg flex items-center space-x-3';
      }
      
      toast.classList.remove('hidden');
      
      // Auto-hide despu√©s de 3 segundos
      setTimeout(() => {
        toast.classList.add('hidden');
      }, 3000);
    }
  }

  // Funci√≥n para actualizar preview en tiempo real
  function updatePreview() {
    const nameInput = document.getElementById('guest_name');
    const messageInput = document.getElementById('message');
    const previewName = document.getElementById('preview-name');
    const previewMessage = document.getElementById('preview-message');
    
    if (previewName && nameInput) {
      previewName.textContent = nameInput.value || 'Nombre del Invitado';
    }
    
    if (previewMessage && messageInput) {
      previewMessage.textContent = messageInput.value || 'Nos complace invitarte a celebrar nuestro d√≠a especial.';
    }
  }

  // Event listeners
  document.getElementById('logout-btn')?.addEventListener('click', () => {
    sessionStorage.removeItem('adminAuth');
    sessionStorage.removeItem('adminUser');
    window.location.href = '/admin/login';
  });

  document.getElementById('refresh-btn')?.addEventListener('click', () => {
    document.getElementById('loading-state')?.classList.remove('hidden');
    document.getElementById('dashboard-content')?.classList.add('hidden');
    currentAnalytics = null;
    currentInvitations = null;
    loadDashboardData();
  });

  document.getElementById('export-json-btn')?.addEventListener('click', async () => {
    try {
      const response = await authenticatedFetch('/api/admin/export?format=json');
      const data = await response.json();
      
      if (data.success) {
        const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `invitados_${new Date().toISOString().split('T')[0]}.json`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        window.URL.revokeObjectURL(url);
      }
    } catch (error) {
      alert('Error al exportar datos');
    }
  });

  document.getElementById('export-csv-btn')?.addEventListener('click', async () => {
    try {
      const response = await authenticatedFetch('/api/admin/export?format=csv');
      const csvData = await response.text();
      
      const blob = new Blob([csvData], { type: 'text/csv' });
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `invitados_${new Date().toISOString().split('T')[0]}.csv`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      window.URL.revokeObjectURL(url);
    } catch (error) {
      alert('Error al exportar CSV');
    }
  });

  // Modal de invitaci√≥n
  document.getElementById('create-invitation-btn')?.addEventListener('click', () => {
    document.getElementById('invitation-modal')?.classList.remove('hidden');
    updatePreview(); // Actualizar preview inicial
  });

  document.getElementById('cancel-invitation')?.addEventListener('click', () => {
    document.getElementById('invitation-modal')?.classList.add('hidden');
    document.getElementById('invitation-form')?.reset();
    updatePreview(); // Reset preview
  });

  // Event listeners para actualizar preview en tiempo real
  document.getElementById('guest_name')?.addEventListener('input', updatePreview);
  document.getElementById('message')?.addEventListener('input', updatePreview);

  // Modal de √©xito - Event listeners
  document.getElementById('close-success-modal')?.addEventListener('click', () => {
    document.getElementById('success-modal')?.classList.add('hidden');
  });

  document.getElementById('copy-link-btn')?.addEventListener('click', async () => {
    const linkInput = document.getElementById('invitation-link');
    
    try {
      await navigator.clipboard.writeText(linkInput.value);
      showToast('Enlace copiado al portapapeles');
    } catch (error) {
      // Fallback para navegadores que no soportan clipboard API
      linkInput.select();
      document.execCommand('copy');
      showToast('Enlace copiado al portapapeles');
    }
  });

  document.getElementById('view-invitation-btn')?.addEventListener('click', () => {
    const linkInput = document.getElementById('invitation-link');
    window.open(linkInput.value, '_blank');
  });

  // Formulario de invitaci√≥n
  document.getElementById('invitation-form')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const submitBtn = document.getElementById('create-invitation-submit');
    const originalText = submitBtn.textContent;
    
    try {
      // Deshabilitar bot√≥n y mostrar loading
      submitBtn.disabled = true;
      submitBtn.textContent = 'Creando...';
      
      const formData = new FormData(e.target);
      const invitationData = {
        guest_name: formData.get('guest_name'),
        message: formData.get('message')
      };
      
      const response = await authenticatedFetch('/api/admin/invitations', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(invitationData)
      });
      
      const data = await response.json();
      
      if (data.success) {
        // Cerrar modal de creaci√≥n
        document.getElementById('invitation-modal')?.classList.add('hidden');
        document.getElementById('invitation-form')?.reset();
        
        // Configurar y mostrar modal de √©xito
        const invitationLink = `${window.location.origin}/invitacion/${data.invitation.token}`;
        const linkInput = document.getElementById('invitation-link');
        linkInput.value = invitationLink;
        
        document.getElementById('success-modal')?.classList.remove('hidden');
        
        // Mostrar toast de √©xito
        showToast('¬°Invitaci√≥n creada exitosamente!');
        
        // Recargar datos del dashboard
        loadDashboardData();
        
        // Limpiar cache de invitaciones para recargar
        currentInvitations = null;
        
        // Reset preview
        updatePreview();
      } else {
        throw new Error(data.message);
      }
    } catch (error) {
      console.error('Error creating invitation:', error);
      showToast('Error al crear la invitaci√≥n: ' + error.message, 'error');
    } finally {
      // Restaurar bot√≥n
      submitBtn.disabled = false;
      submitBtn.textContent = originalText;
    }
  });
</script>
</BaseLayout>